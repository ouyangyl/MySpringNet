<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns='http://www.springframework.net'
         xmlns:db="http://www.springframework.net/database"
         xmlns:tx="http://www.springframework.net/tx">

  <object id="transactionManager"
        type="Spring.Data.NHibernate.HibernateTransactionManager, Spring.Data.NHibernate21">
    <!--  Comment out DbProvider if you want to have the tx mgr infer the DbProvider from
              the session factory.  -->
    <!--  Set the DbProvider explicitly if you would like to have ADO.NET and NHibernate
              operations take place within the same transaction.  -->
    <property name="DbProvider" ref="DbProvider"/>
    <property name="SessionFactory" ref="SessionFactory"/>

  </object>
  
  <db:provider id="DbProvider"
               provider="SqlServer-2.0"
               connectionString="Data Source=SPRINGQA;Database=Spring;User ID=springqa;Password=springqa;Trusted_Connection=False"/>


    <object id="SessionFactory" type="Spring.Data.NHibernate.LocalSessionFactoryObject, Spring.Data.NHibernate21">
        <property name="DbProvider" ref="DbProvider"/>


        <property name="MappingAssemblies">
            <list>
                <value>Spring.Data.NHibernate21.Integration.Tests</value>
            </list>
        </property>
        <property name="HibernateProperties">
           <dictionary>

                <entry key="connection.provider"
                       value="NHibernate.Connection.DriverConnectionProvider"/>

                <entry key="dialect"
                       value="NHibernate.Dialect.MsSql2000Dialect"/>

                <entry key="connection.driver_class"
                       value="NHibernate.Driver.SqlClientDriver"/>

           </dictionary>
        </property>
        <!-- provides integation with Spring's declarative transaction management features -->
        <property name="ExposeTransactionAwareSessionFactory" value="true" /> 
    </object>

    <!-- DAOs -->
    <object id="AccountCreditDao" type="Spring.Data.NHibernate.AccountCreditDao, Spring.Data.NHibernate21.Integration.Tests">
        <property name="SessionFactory" ref="SessionFactory"/>
    </object>
    <object id="AccountDebitDao" type="Spring.Data.NHibernate.AccountDebitDao, Spring.Data.NHibernate21.Integration.Tests">
        <property name="SessionFactory" ref="SessionFactory"/>
    </object>

    <object id="AuditDao" type="Spring.Data.NHibernate.AuditDao, Spring.Data.NHibernate21.Integration.Tests">
      <property name="DbProvider" ref="DbProvider"/>
    </object>

  <tx:attribute-driven/>

  <!-- The DAO object that performs multiple data access operations -->
    <object id="accountManager"
            type="Spring.Data.NHibernate.AccountManager, Spring.Data.NHibernate21.Integration.Tests">
      <property name="AccountCreditDao" ref="AccountCreditDao"/>
      <property name="AccountDebitDao" ref="AccountDebitDao"/>

      <!--
      <property name="AuditDao" ref="AuditDao"/>
      -->


      <!--
      <property name="ThrowException" value="true"/>
      -->

      <!--
      <property name="ThrowExceptionAtEnd" value="true"/>
      -->

    </object>

  <object id="accountController" type="Spring.Data.NHibernate.AccountController, Spring.Data.NHibernate21.Integration.Tests">
    <property name="AccountManager" ref="accountManager"/>
  </object>







    <!-- Transactional Proxy for TestObjectManager using the ProxyFactoryObject -->
  <!--
    <object id="accountManager"
            type="Spring.Aop.Framework.ProxyFactoryObject, Spring.Aop">

        <property name="Target" ref="accountManagerTarget"/>

        <property name="InterceptorNames">
            <value>transactionInterceptor</value>
        </property>

    </object>
    -->

    <!-- Transaction Interceptor based on attribute [Transaction()] -->

  <!-- note do not have converter from string to this property type registered -->
  <!--
    <object id="transactionInterceptor"
            type="Spring.Transaction.Interceptor.TransactionInterceptor, Spring.Data">
        <property name="TransactionManager" ref="hibernateTransactionManager"/>
        
        <property name="TransactionAttributeSource">
            <object type="Spring.Transaction.Interceptor.AttributesTransactionAttributeSource, Spring.Data"/>
        </property>
    </object>
  
  -->
  

</objects>