<?xml version="1.0" encoding="utf-8"?>

<objects xmlns="http://www.springframework.net" xmlns:aop="http://www.springframework.net/aop">
  <!--通知 描述了切面要完成的任务，同时还描述了何时执行这个任务-->
  <!--<object id="RequireLoginAdvice" type="MySpringNet.Controllers.AOP.RequireLoginAdvice,MySpringNet"></object>-->
  
  <!--切入点 定义通知切入的一个或者多个连接点-->
  <!--程序中应用通知的地方称为连接点，这个点可以是方法被调用时，异常抛出时，甚至访问属性的时候-->
  <!--<object id="RequireLoginAdvisor" type="Spring.Aop.Support.SdkRegularExpressionMethodPointcut, Spring.Aop">
    <property name="pattern" value="MySpringNet.Controllers.HomeController.Index"></property>
  </object>-->
  
  <!--切面 通知和切入点的结合。通知和切入点共同定义了切面的全部内容：功能、时机、位置-->
  <!--<aop:config>
    <aop:advisor advice-ref="RequireLoginAdvice" pointcut-ref="RequireLoginAdvisor"/>
  </aop:config>-->
  
  <object id="RequireLoginAdvisor" name="RequireLoginAdvisor" type="Spring.Aop.Support.RegularExpressionMethodPointcutAdvisor, Spring.Aop">
    <property name="patterns">
      <list>
        <value>MySpringNet.Controllers.HomeController.*</value>
      </list>
    </property>
    <property name="advice">
      <!--<ref local="RequireLoginAdvice"/>-->
      <object type="MySpringNet.Controllers.AOP.RequireLoginAdvice,MySpringNet"></object>
    </property>
  </object>
 
  <!--There is an important limitation in the inheritance based proxy as described above, all methods that manipulate
the state of the object should be declared as virtual. Otherwise some method invocations get directed to the private
'target' field member and others to the base class. Winform object are an example of case where this approach
does not apply. To address this limitation, a new post-processing mechanism was introduced in version 1.2 that
creates a proxy type without the private 'target' field. Interception advice is added directly in the method body
before invoking the base class method.-->
  <object type="Spring.Aop.Framework.AutoProxy.InheritanceBasedAopConfigurer, Spring.Aop">
    <property name="ObjectNames">
      <list>
        <value>HomeController</value>
      </list>
    </property>
    <property name="InterceptorNames">
      <list>
        <value>RequireLoginAdvisor</value>
      </list>
    </property>
  </object>
  
   <object id="BaseController" name="BaseController" abstract="true">
    <property name="PageSize" value="${PageSize}">
    </property>
     <property name="UserName" expression="@(httpContext).User.Identity.Name"></property>
  </object>

  <object id="HomeController" name="HomeController" type="MySpringNet.Controllers.HomeController,MySpringNet" parent="BaseController" singleton="false">
    
  </object>
</objects>
